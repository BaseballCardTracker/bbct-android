apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

buildscript {
    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.8.1'
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
    }
}

android {
    flavorDimensions "tier"

    defaultConfig {
        compileSdk 34
        applicationId "bbct.android.common"
        minSdk 21
        targetSdk 34
        versionCode 24
        versionName "1.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            ext.enableCrashlytics = false
            debuggable true
        }
    }
    productFlavors {
        lite {
            dimension "tier"
            applicationId "bbct.android"
        }
        premium {
            dimension "tier"
            applicationId "bbct.android.premium"
        }
    }
    packagingOptions {
        resources {
            excludes += ['LICENSE.txt']
        }
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
    namespace 'bbct.android.common'
}

Properties props = new Properties()
def propFile = new File('bbct.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null) {
        if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD')
                && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'bbct.properties found but SIGNING entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    }
} else {
    println 'bbct.properties not found'
}

ext {
    annotationVersion = '1.8.0'
    appcompatVersion = '1.7.0'
    archCompVersion = '1.1.1'
    butterknifeVersion = '10.0.0'
    espressoVersion = '3.6.1'
    fastlaneVersion = '2.1.1'
    firebaseAnalyticsVersion = '22.0.2'
    firebaseCrashlyticsVersion = '19.0.3'
    fragmentVersion = '1.8.1'
    googleServiceAdsVersion = '23.2.0'
    junitVersion = '4.13.1'
    lifecycleVersion = '2.8.4'
    materialVersion = '1.12.0'
    roomVersion = '2.6.1'
    testLibVersion = '1.6.1'
    uiautomatorVersion = '2.3.0'
}

dependencies {
    implementation "androidx.appcompat:appcompat:${appcompatVersion}"
    implementation "com.google.android.material:material:${materialVersion}"
    implementation "androidx.room:room-runtime:${roomVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata:${lifecycleVersion}"
    implementation "com.google.firebase:firebase-analytics:${firebaseAnalyticsVersion}"
    implementation "com.google.firebase:firebase-crashlytics:${firebaseCrashlyticsVersion}"
    implementation "com.jakewharton:butterknife:${butterknifeVersion}"

    liteImplementation "com.google.android.gms:play-services-ads:${googleServiceAdsVersion}"

    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknifeVersion}"
    annotationProcessor "androidx.room:room-compiler:${roomVersion}"

    testImplementation "junit:junit:${junitVersion}"
    testImplementation "androidx.room:room-testing:${roomVersion}"

    androidTestImplementation "androidx.annotation:annotation:${annotationVersion}"
    androidTestImplementation "androidx.test:runner:${testLibVersion}"
    androidTestImplementation "androidx.test:rules:${testLibVersion}"
    androidTestImplementation "androidx.fragment:fragment-testing:${fragmentVersion}"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:${uiautomatorVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espressoVersion}"
    androidTestImplementation "tools.fastlane:screengrab:2.1.1"
}
